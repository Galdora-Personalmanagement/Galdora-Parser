---
alwaysApply: true
---
## ✅ NACH JEDER AUFGABE

- 📄 **Summary erstellen**  
  Erstelle `context/summary-[Nummer].md`  
  Inhalt:  
  - Was wurde getan?  
  - Was hat nicht funktioniert?  
  - Welche Dateien wurden verändert?  
  - Welche Fehler traten auf / Lessons Learned?  
  Ton: Informationsdicht, sachlich, README-ähnlich, 3 Absätze.

- 📌 **Progress.md aktualisieren**  
  - Tasks nach "Erledigt" verschieben  
  - Neue Aufgaben (falls erkannt) unter "Offen" hinzufügen

- 🧭 **Projektstruktur aktualisieren**  
  - Änderungen in `context/Projektstruktur.md` spiegeln  
  - Neue / gelöschte / verschobene Dateien eintragen

---

## 🧠 VOR JEDER AUFGABE

- 🔍 **Kontextanalyse (MCP Check)**  
  - Nutze immer MCP Context 7 zur Live-Code-Einsicht  
  - Lese:  
    - `context/Projektkontext.md`  
    - `context/Projektstruktur.md`  
    - `context/Progress.md`  

- ⚙️ **Vorbedingungen prüfen**  
  - Alle Abhängigkeiten installiert?  
  - API-Keys & Konfiguration gültig?

- 🔄 **Abhängigkeiten beachten**  
  - Aufgaben in logischer Reihenfolge abarbeiten

---

## 📁 context/-Ordner (nur diese Dateien erlaubt)
context/
├── Projektkontext.md
├── Projektstruktur.md
└── Progress.md

---

## 🚨 HARTE REGELN

- Keine weiteren Dateien im `context/`-Ordner
- Immer MCP Context 7 verwenden
- So wenig Code wie möglich schreiben
- Immer dieselbe Struktur & Sprache einhalten
- Nur aktuelle & relevante Infos speichern
- Jede Datei mit vielen Hinweisen ausstatten, sodass zukünftige Entwickler es einfacher haben