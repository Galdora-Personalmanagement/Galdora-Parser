# CV2Profile Parser-40 - Cursor Workflow Rules

## PROJEKT-WORKFLOW AUTOMATISIERUNG

### üéØ NACH JEDER ERFOLGREICH ABGESCHLOSSENEN AUFGABE:

1. **AUTOMATISCHE SUMMARY-ERSTELLUNG:**
   - Erstelle eine neue Summary-Datei im Format `context/summary-[DD-MM-HH].md`
   - Dokumentiere den Zeitstempel (UTC), durchgef√ºhrte √Ñnderungen, erledigte Tasks und aufgetretene Probleme
   - Konsolidiere die wichtigsten Erkenntnisse aus der Session

2. **PROGRESS-UPDATE:**
   - Aktualisiere `context/Progress.md` mit den neu erledigten Aufgaben. Dies ist unsere MVP-Datei
   - Verschiebe abgeschlossene Tasks von "Offen" zu "Erledigt"
   - F√ºge neue erkannte Aufgaben zu den entsprechenden Priorit√§tskategorien hinzu

3. **PROJEKTSTRUKTUR-√úBERPR√úFUNG:**
   - √úberpr√ºfe `context/Projektstruktur.md` auf √Ñnderungen in der Datei-/Ordnerstruktur
   - Aktualisiere den Strukturbaum bei neuen Dateien, gel√∂schten Dateien oder Umstrukturierungen
   - Markiere Template-Status-√Ñnderungen oder neue Module

### üîç VOR BEGINN JEDER NEUEN AUFGABE:

1. **KONTEXT-ANALYSE:**
   - Lese alle drei Kerndateien im `context/`-Ordner:
     - `Projektkontext.md` (Projekt√ºbersicht und Funktionalit√§ten)
     - `Projektstruktur.md` (Aktueller Aufbau und Konfiguration)
     - `Progress.md` (Erledigte/offene Aufgaben und Priorit√§ten)

2. **AUFGABEN-PRIORISIERUNG:**
   - Identifiziere die Aufgabe basierend auf der Priorit√§ten-Matrix in Progress.md
   - Ber√ºcksichtige Abh√§ngigkeiten zwischen Aufgaben
   - Verstehe den aktuellen Projektstand und verf√ºgbare Ressourcen

3. **VORBEDINGUNGEN PR√úFEN:**
   - √úberpr√ºfe, ob alle erforderlichen Module und Dependencies verf√ºgbar sind
   - Stelle sicher, dass der lokale Server l√§uft (localhost:8501)
   - Validiere API-Keys und Konfigurationen falls n√∂tig

### üìÅ KONTEXT-ORDNER STRUKTUR (NUR DIESE 3 DATEIEN):

```
context/
‚îú‚îÄ‚îÄ Projektkontext.md      # Konsolidierte √úbersicht aller Summary-Informationen
‚îú‚îÄ‚îÄ Projektstruktur.md     # Strukturbaum des Projekts (wird bei √Ñnderungen aktualisiert)
‚îî‚îÄ‚îÄ Progress.md            # Erledigte und offene Aufgaben mit Priorit√§ten
```

### üö´ STRIKTE REGELN:

- **NIEMALS** andere Dateien im `context/`-Ordner erstellen oder belassen
- **IMMER** alle drei Kerndateien vor jeder neuen Aufgabe analysieren
- **AUTOMATISCH** nach jeder Aufgabe eine Summary-Datei mit Timestamp erstellen
- **KONSISTENT** die Projektstruktur nach strukturellen √Ñnderungen aktualisieren
- **FOKUSSIERT** nur relevante und aktuelle Informationen in den Kerndateien behalten

### üí° QUALIT√ÑTSSICHERUNG:

- **Vollst√§ndigkeit:** Jede Summary muss Zeitstempel, √Ñnderungen, Tasks und Probleme enthalten
- **Konsistenz:** Gleiche Formatierung und Struktur in allen Summary-Dateien
- **Aktualit√§t:** Progress.md muss immer den neuesten Stand aller Aufgaben widerspiegeln
- **Klarheit:** Projektstruktur.md muss die reale Dateistruktur exakt abbilden

### üéØ WORKFLOW-EXAMPLE:

1. **Start:** Lese `context/Projektkontext.md`, `context/Projektstruktur.md`, `context/Progress.md`
2. **Work:** F√ºhre die priorisierte Aufgabe aus
3. **Document:** Erstelle `context/summary-[DD-MM-HH].md` mit allen Details
4. **Update:** Aktualisiere `context/Progress.md` mit neuen erledigten Tasks
5. **Verify:** √úberpr√ºfe und aktualisiere `context/Projektstruktur.md` bei Struktur√§nderungen
6. **Clean:** Stelle sicher, dass nur die 3 Kerndateien im context/-Ordner existieren

Diese Rules garantieren einen effizienten, nachverfolgbaren und fokussierten Entwicklungsworkflow f√ºr das CV2Profile Parser-40 Projekt. 